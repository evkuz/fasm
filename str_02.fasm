; Работа со строками
; lods, stos
; 1. Модифицируем исходную строку в строку вывода с разницей в 1 кода ASCII
; 2. Копируем исходную строку в строку вывода
; 3. выводим обе строки

format ELF executable 3
entry start

segment readable executable

start:
mov esi, str_in         ; Адрес источника - str_in
mov edi, str_out        ; Адрес приемника - str_out
mov ecx, sz_abc -1      ; Длина строки без '\n'-символа

@@:
lodsb                   ; Записали в eax 1 байт из строки источника
inc eax
stosb                   ; Записали 1 байт из eax в строку приемник
loop @b

movsb

;stosb
call print_out
call THE_END
;movsw
;scasb
;movsd
;mov eax,0xd			
;stosb
;movsb
;movsw
;movsd
;mov esi, str_in         ; Адрес источника - str_in
;mov edi, str_out        ; Адрес приемника - str_in
;mov ecx, sz_abc -1      ; Длина строки без 0-символа
; Копируем строку

print_out:
;;;;;;;;;;;;;;;;;; print out
; 1st - souce string
mov eax,0x04          ; write 
mov ebx,1             ; 1=stdout to ebx
mov ecx,str_in        ; source string address of data 
mov edx,sz_abc        ; size (amount) of data
int 80h
; next - destination string 
mov eax,0x04
mov ebx,1
mov ecx, str_out
mov edx, sz_abc        ; size equal
int 80h
ret

THE_END:

;;;;;;;;;;;;; EXIT  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
mov eax,1
int 80h

;ret

segment readable writeable
str_in db 'abcd1234',0xA ; '\n'
sz_abc = $ - str_in

str_out rb sz_abc