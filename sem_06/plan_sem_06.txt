plan_sem_06

1. logic_ops.asm -  Используем в работе edb-debugger. Проверяем xor, bsf, bsr, сдвиг, цикл. сдвиг, сдвиг с загрузкой, BSWAP

2. to_upper - перевод строки в верхний регистр. ;Пример использования repe, xlatb;  а русские буквы ?

5.1 test_af/_02 - Проверка флага AF (с использованием lahf, 'bt' и без нее)



07 06 05 04  03 02 01 00
              1  0  1  0  0xA
              1  1  1  1  0Xf
              0  1  0  1  0x5  [xor 0xa, 0xf == 0x5]
  


0x00 01 03 02
    |---------байт 1-------|  |---------байт 0-------|
16  15 14 13 12  11 10 09 08  07 06 05 04  03 02 01 00
 1			1  1	   	          1
 RF                 DF IF  TF

            bc
0x 08 04 90 c4

            c6
0x 08 04 90 ce
####################################
            C0
0x 08 04 90 c8
            ca
0x 08 04 90 d2


logic_ops - демонстрация логических операций.

AX = AH AL						0x00CC
16  15 14 13 12  11 10 09 08  07 06 05 04  03 02 01 00
                               1  1  0  0   1  1  0  0
							0x0330
16  15 14 13 12  11 10 09 08  07 06 05 04  03 02 01 00
                  0  0  1  1   0  0  1  1   0  0  0  0

##########################################################################

AX = AH AL						0xC0CC
16  15 14 13 12  11 10 09 08  07 06 05 04  03 02 01 00
     1  1  0  0   0  0  0  0   1  1  0  0   1  1  0  0
							0x0333
16  15 14 13 12  11 10 09 08  07 06 05 04  03 02 01 00
     0  0  0  0   0  0  1  1   0  0  1  1   0  0  1  1


##########################################################################

AX = AH AL						0x08CC
16  15 14 13 12  11 10 09 08  07 06 05 04  03 02 01 00
     0  0  0  0   1  0  0  0   1  1  0  0   1  1  0  0
							0x4667 = shld 0x08CC, 0xE000, 3
16  15 14 13 12  11 10 09 08  07 06 05 04  03 02 01 00
     0  1  0  0   0  1  1  0   0  1  1  0   0  1  1  1

##########################################################################
						   0x000E >> 0x2330 >> 2
15 14 13 12  11 10 09 08  07 06 05 04  03 02 01 00 
       1            1  1         1  1 


15 14 13 12  11 10 09 08  07 06 05 04  03 02 01 00
 1  1         1   	   1  1         1  1





