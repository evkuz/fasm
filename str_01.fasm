; Работа со строками
; lods, stos
format ELF executable 3
entry start

segment readable executable

start:
mov esi, str_in         ; Адрес источника - str_in
mov edi, str_out        ; Адрес приемника - str_in
mov ecx, sz_abc -1      ; Длина строки без 0-символа

@@:
lodsb                   ; Записали в eax 1 байт
inc eax
stosb
loop @b

;mov eax,0				; copy 0-byte
;stosb

;;;;;;;;;;;;;;;;;; print out
; 1st - souce string
mov eax,0x04          ; write 
mov ebx,1             ; 1=stdout to ebx
mov ecx,str_in        ; source string address of data 
mov edx,sz_abc        ; size (amount) of data
int 80h
; next - destination string 
mov eax,0x04
mov ebx,1
mov ecx, str_out
mov edx, sz_abc        ; size equal
int 80h


;;;;;;;;;;;;; EXIT  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
mov eax,1
int 80h

segment readable writeable
str_in db 'abcd1234',0xA,0
sz_abc = $ - str_in

str_out rb sz_abc