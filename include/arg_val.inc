; arg_val.inc
; INPUT
; EAX = адрес аргумента командной строки.
; OUTPUT
; EAX = числовое значение аргумента.
; ECX = длина строки аргумента ??? НЕ-а, равна нулю
; Нам тут длина строки не нужна, т.к. утилита будет использоваться внутри fasm-кода,
; а длина строки нужна для вывода в консоль.

get_arg_val: ; получаем адрес, вычисляем длину строки => определяем числовое значение аргумента

mov esi, eax
push eax
mov ecx, -1 ; счетчик цикла будем начинать с 0
  strlen:
   inc ecx
     lodsb
     cmp al, 0
     jne strlen
; Вот теперь получили длину в ECX и начинаем перевод в число

pop eax
mov esi, eax
	push 0
	@@: ; Перебираем символы строки ESI
	   
	lodsb       ;  Загрузили байт в EAX из ESI
	sub al, 0x30  ; получили цифру
	pop edx        ; взяли предыдущее значение, умножили его на 10 и прибавили новую цифру
	imul edx, 10
	add dl, al
	push EDX       ; новое значение в стек
	loop @b        ; ecx уменьшается на 1
	
	pop eax        ; выровняли стек, положили значение в eax

	ret 